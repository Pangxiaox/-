# Generated by Django 2.2.5 on 2019-09-22 02:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiagnosticReports',
            fields=[
                ('id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('seriousDegree', models.IntegerField(max_length=1)),
                ('treatNeed', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('diaResult', models.TextField()),
                ('Doctor', models.CharField(max_length=20)),
                ('Director', models.CharField(max_length=20)),
                ('reportTime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='EssentialInformation',
            fields=[
                ('id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('main_suit', models.TextField()),
                ('medicalhistory_present', models.TextField()),
                ('tuberculosis_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('hepatitis_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('other_infectious_diseases_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('chronic_disease_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('hypertension_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('diabetes_mellitus_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('heart_disease_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('vaccination_allergy_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('surgery_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('past_history_remarks', models.TextField(blank=True, null=True)),
                ('smoking_hobbies', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('drinking_hobbies', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('epidemic_water_contact_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('personal_history_remark', models.TextField(blank=True, null=True)),
                ('marital_reproductive_history_remark', models.TextField(blank=True, null=True)),
                ('menopause', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('menstrual_history_remark', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('diabetes_mellitus_family_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('coronary_heart_disease_family_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('stroke_family_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('tumors_family_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('hypertension_family_history', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('family_history_remark', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EyeExamine',
            fields=[
                ('id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('right_vision', models.FloatField()),
                ('left_vision', models.FloatField()),
                ('right_intraocularpressure', models.FloatField()),
                ('left_intraocularpressure', models.FloatField()),
                ('right_eyelid_edema', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_eyelid_edema', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_eyelid_flip', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_eyelid_flip', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_other_eyemovement', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_other_eyemovement', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_other_protrusion', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_other_protrusion', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_lacrimaapparatus_skinredness', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_lacrimaapparatus_skinredness', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_lacrimaapparatus_compression', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_lacrimaapparatus_compression', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_lacrimaapparatus_passage', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_lacrimaapparatus_passage', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_conjunctive', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_conjunctive', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_sclera', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_sclera', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_corneal_transparency', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_corneal_transparency', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_anteriorchamber_central', models.FloatField()),
                ('left_anteriorchamber_central', models.FloatField()),
                ('right_anteriorchamber_surrounded', models.FloatField()),
                ('left_anteriorchamber_surrounded', models.FloatField()),
                ('right_anteriorchamber_waterproof', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_anteriorchamber_waterproof', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_iris', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_iris', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_pupil_diameter', models.FloatField()),
                ('left_pupil_diameter', models.FloatField()),
                ('right_pupil_lightreflection', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('left_pupil_lightreflection', models.CharField(choices=[('有', 'yes'), ('无', 'no')], max_length=1)),
                ('right_fundusoculi_detailinform', models.TextField()),
                ('left_fundusoculi_detailinform', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
                ('age', models.IntegerField()),
                ('sex', models.CharField(choices=[('男', 'male'), ('女', 'female')], max_length=2)),
                ('nation', models.CharField(max_length=10)),
                ('occupation', models.CharField(max_length=10)),
                ('marriage', models.CharField(choices=[('已婚', 'true'), ('未婚', 'false')], max_length=2)),
                ('p_birthplace', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=30)),
                ('medicalhistory_reporter', models.CharField(max_length=10)),
                ('admission_date', models.DateField()),
                ('medicalhistory_recordtime', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='DoctorLogin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('docname', models.CharField(max_length=10)),
                ('hosid', models.CharField(max_length=20)),
                ('hosname', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
